n-body problem and simulation methods.

INTRODUCTION: several usages of n-body problem

여러 역학 문제들을 살펴봅시다.
Let's look at some mechanics problems.


첫 번째는 분자 역학 입니다. 분자 간의 근사된 포텐셜을 이용해 많은 수의 분자가 있는 시스템을 시뮬레이션 합니다. 화학공학과 분자생물학 문제에 사용됩니다.
The first is molecular dynamics. It uses approximated potentials between molecules to simulate systems with large numbers of molecules. It is used for problems in chemical engineering and molecular biology.

두 번째는 플라즈마 물리학입니다. 외부에서 걸린 전기장, 자기장하에서 전하를 가진 전자들과 양이온, 원자핵의 거동을 시뮬레이션 합니다. 플라즈마를 다루는 이온엔진이나 핵융합 장치 제작에 필수적입니다.
The second is plasma physics. It simulates the behaviors of charged electrons, cations, and atomic nuclei under externally applied electric and magnetic fields. It is essential for building ion engines and nuclear fusion devices that deal with plasmas.


세 번째는 우주 탐사선 발사입니다. 태양과 지구 뿐 아니라 여러 행성과 위성, 소행성 무리들이 만드는 포텐셜에 의해 탐사성의 궤적이 결정됩니다.
The third is the launch of space probes. The trajectory of a probe is determined by the potentials created by the Sun and Earth, as well as by a group of planets, moons, and asteroids.

네 번째는 태양계의 시뮬레이션 입니다. 지구 근처를 지나는 소행성들의 궤도를 예측하거나, 태양계 자체를 시뮬레이션 하여 태양계의 진화와 안정성 등을 평가할 수 있습니다.
The fourth is a simulation of the solar system. We can predict the orbits of asteroids passing near Earth, or simulate the solar system itself to evolution its evolution and stability.

소개한 문제들의 공통점은 여러 객체가 서로 상호작용하는 manybody problem이라는 것 입니다. 이체문제는 일반물리학과 고전역학 수업에서 질량중심의 운동과 상대 운동으로 분해하여 해석적인 해를 구할 수 있음을 보였습니다. 하지만 many body problem은 어떻게 풀까요? 3체 이상의 중력 상호작용 문제는 풀 수 없다는 사실을 들어본 사람이 있을 것 입니다. 이 동영상에서는 다체 문제의 해석적 해에 관한 간단한 논의와, 다체 문제의 근사해를 구하는 수치해석적 방법을 다룹니다.

What these problems have in common is that they are many-body problems. In general physics and classical mechanics courses, we have seen that the two-body problem. To get an analytical solution, it can be decomposed into center-of-mass motion and relative motion to each other. But how do we solve a many-body problem with more than two objects? You may have heard that gravitational interaction problems involving more than three bodies are unsolvable. This video provides a brief discussion of analytical solutions to many-body problems, and numerical methods for approximating the solution of the many-body problems.


- n-body celestial mechanics
여기 입자들이 중력으로 상호작용하는 계가 있습니다. 입자들의 움직임을 어떻게 예측 할까요?
Here we have a system of particles interacting with gravity. How do we predict the motion of the particles?


답은 간단합니다. 입자 계에 대한 Hamiltinian을 찾고, Hamiltonian Equation of motion을 풀어 해를 얻으면 됩니다.
The answer is simple. Find the Hamiltonian for the system and solve the equation of motion to get the solution.


만약 물체가 중력장 하에서 모양이 바뀐다면, 문제가 훨씬 복잡해집니다. 따라서 이번에는 천체를 강체로 가정합니다. 
If an object changes shape under a gravitational field, the problem becomes much more complicated, so we'll assume the celestial body is a rigid body. 

강체의 운동은 총 6개의 mode로 전부 표현할 수 있습니다.
The motion of a rigid body can be described by a total of six modes.

3개의 translational mode, 3개의 angular mode가 있죠. 전체 운동 해밀토니안은 각 part의 합입니다.
There are three translational modes and three angular modes. The total kinematic Hamiltonian is the sum of the 6 six parts for each objects.

이제 hamiltonian의 potential part를 봅시다. potential part 또한 적분으로 표현가능합니다. 하지만 물체들이 움직임에 따라서 이 적분은 계속 다시 계산되어야 하고, 그것은 현실적이지 않습니다. 
Now let's look at the potential part of the hamiltonian. The potential part can also be expressed as an integral. However, as the object moves, this integral would have to be recalculated again and again, which is not realistic. 


따라서 적절한 형태로 근사하고 변형해야 합니다. celestial mechanics의 경우 천체들이 서로 멀리 떨어져있고, 구형에 가깝기 때문에 multipole expansion이 좋은 근사가 됩니다.
For celestial mechanics, multipole expansion is a good approximation because the celestial bodies are far away from each other and close to spherical.


charge distribution의 multipole expansion과 다르게 mass distribution은 항상 양수 이므로 center-of-mass frame에서 multipole expansion 하는 경우 gravitational dipole은 존재하지 않습니다. 
Unlike the multipole expansion of the charge distribution, the mass distribution is always positive, so the gravitational dipole does not exist for multipole expansion in the centre-of-mass frame. 

multipole중 dipole 다음으로 큰 항은 quadrupole 입니다. 
The next largest term after the dipole is the quadrupole.

gravitational quadrupole field는 가까운 천체의 precession을 계산하는데 사용됩니다. 지구의 아주 가까운 인공위성들의 경우에는 궤도에도 영향을 미친다. 고정이나 Anomalous precession of Mercury등을 해석하기 위해 사용됩니다.
The gravitational quadrupole field is used to calculate the precession of nearby celestial bodies. The Sun's quadrupole moment was one of the classical corrections to interpret the anomalous precession of Mercury.

In addition, satellites are so close to the Earth that their orbit calculations include the Earth's quadrupole field.



하지만 많은 경우에서 천체들 사이의 거리가 충분히 멀다면 quadrupole에 의한 효과는 무시될 수 있습니다. 또한, 이후의 논의에서 high order pole들이 살아있다면, 계산이 훨신 복잡해지므로, 일단 무시하기로 합니다. 
In many cases, however, the effect of quadrupoles can be neglected if the distance between the bodies is sufficiently large. Also, as we will see later, if the higher order poles are alive, the calculations become much more complicated, so we will ignore them for now. 


그렇다면 토크가 없으므로 강체의 회전은 constant of motion이 되고, 무시됩니다. 이러한 근사를 포함한 최종 해밀토니안은 이렇습니다.
Then, since there is no torque, the rotation of the rigid body becomes a constant of motion and is neglected.


- poincare's proof of unsolvability

간단한 케이스 부터 생각해봅시다. 2-body case는 이미 일반물리학, 고전 역학 수업에서 다루었으므로 3-body case부터 생각해봅시다. 이미 많은 물리학자들이 특수 해를 찾아뒀습니다.
Let's start with the simpler cases. The two-body case has already been covered in general physics and classical mechanics, so let's start with the three-body case. Many physicists have already found the special solution


그렇다면 초기 위치와 운동량이 주어질 때 임의의 시간 t 뒤의 물체의 입자의 위치와 운동량을 알 수 있을까요? 푸엥카레의 증명에 따르면, 적어도 초등함수들로 이루어진 closed-form solution은 없다는 것입니다.
So, given initial positions and momentum, can we know the positions and momentum of a particle in an object after an arbitrary time t? According to Poincaré's proof, there is no closed-form solution, at least not in terms of elementary functions.

그럼 해를 수학적으로 표현이라도 할 수 있을까요?
But is there a mathematical representation of the solution, even if it's not closed-form?


가능합니다. 핀란드의 수학자 Karl Fritiof Sundman는 Puiseux series를 이용해 제안해 3체문제의 해석적 해를 수학적으로 표현했습니다. Sundman은 거의 모든 initial condition에 대해 이러한 Puiseux series의 계수들을 결정할 수 있다는 것을 증명했습니다.
It's possible. Finnish mathematician Sundman used the Puiseux series to mathematically represent the analytic solution of the three-body problem. Sundman proved that the coefficients of these Puiseux series can be determined for almost any initial condition.


하지만 실제 문제에 이 급수를 계산하는 것은 비현실적입니다. 3체 이상의 문제에 대해서는 적용하지도 못할 뿐 아니라, 수렴 속도도 느리기 때문에 계산에 사용하려면 이제부터는 다른 방법으로 n-body celestial mechanics의 해를 근사하는 방법을 알아봅시다. 
However, it is impractical to compute these series for real-world problems. Not only are they inapplicable to problems with more than three bodies, but they also converge slowly, so if we want to use them in our calculations, we will now look at other ways to approximate the solutions of n-body celestial mechanics. 


Numerical Methods for n-Body Problem
(method) 

다시 원래 문제로 돌아가서 Hamiltonian equation of motion을 살펴봅시다. 3차원 공간의 천체들의 움직임은 6N-dimentional ordinary differential equation 입니다. 따라서 Initial value problem을 수치적분하는 여러 방법을 적용해볼 수 있습니다.

Let's go back to the original problem and look at the equation of motion. The motion of a body in three-dimensional space is described by a 6N-dimensional ordinary differential equation. Therefore, we can apply several methods to numerically solve the initial value problem. To obtain the time evolution of the system.


- approach with Euler's method
가장 간단한 Eular's method를 사용해봅시다.
Let's use the simplest method, Eular's method.

[시뮬레이션]

뭔가 이상합니다. 시간이지날 수록 거리가 멀어집니다. 에너지를 플롯 해 볼까요?
Something is wrong. The distance is increasing over time. Let's plot the energy.

이 문제의 Hamiltonian은 explicit time dependence가 없으므로 에너지가 constant of motion 이어야 하지만 시뮬레이션 결과는 그렇지 않습니다. 왜 이런 일이 나타나는 걸까요? 
The Hamiltonian in this problem has no explicit time dependence, so the energy should be a constant of motion, but the simulation result does not. Why does this happen? 

간단히 설명하자면 수치해석의 오차입니다. 
In simple terms, it's an error in numerical analysis. 

이 초기 세팅에서 입자는 원 궤도를 따라야 하지만, 실제로는 이렇게 궤도에서 조금 벗어난 지점으로 위치가 업데이트 됩니다. 
In this initial setup, the particle should follow a circular orbit, but in practice, their positions are updated to points slightly off this orbit. 

위상공간에서도 등에너지 곡면 위에서 이동해야하지만 Eular method를 사용하는 경우 등에너지 곡면의 접공간 위의 점으로 위치가 업데이트 되므로 문제가 발생합니다. 
In phase space, the system must move on the isoenergetic surface, but if you use the Eular's method, the phase space point is updated to a point on the tangent space of the isoenergetic surface, and It causes this error

따라서 수치 적분 방법을 수정하여 등에너지 곡면 위의 점으로 업데이트 되도록 해야 합니다. 
Therefore, we need to modify the numerical integration method so that it updates to a point on the isoenergetic surface. 

- symplectic methods

심플렉틱 적분기는 해밀턴 시스템을 위해 설계된 수치 적분 방법 입니다. 심플렉틱 적분기를 사용하면 원본으로 부터 조금 섭동된 해밀토니안이 보존됩니다.
The symplectic integrator is a numerical integration method designed for Hamiltonian systems. Using a symplectic integrator preserves the Hamiltonian that is slightly perturbed from the original.

[식 설명]
먼저 해밀토니안이 운동량에만 의존하는 운동에너지 항과, 위치에만 의존하는 퍼텐셜 에너지 항으로 나눠진다고 가정합시다. 상대론적 효과를 무시하고 중력만 있는 상황에서는 참인 가정입니다. 
First, assume that the Hamiltonian splits into a kinetic energy term, which depends only on momentum, and a potential energy term, which depends only on position. This assumption is valid in the presence of gravity alone, ignoring relativistic effects. 

노테이션의 편의를 위해 새 변수와 연산자를 도입합니다.
For ease of notation, we introduce new variables and operators.

그렇다면 Equation of motion은 이러한 differential equation으로 변환되고, exponential을 이용해 해를 표현할 수 있습니다. 작은 step size h이후의 z를 이 solution을 이용해서 구할 것 입니다.
The equation of motion is then transformed into such a differential equation, and the solution can be expressed using an exponential. We will use this solution to find z after a small step size h.


가정에 따라 operator를 나누고, operator의 commutativity를 이용해 여러 exponential의 곱으로 전개합니다. 
여기서 각 항들을 테일러근사하여 실제로 계산할 수 있는 형태로 만듭니다. 이후 적절한 방법으로 c_i, d_i들을 찾으면 적분 방법이 완성됩니다. 유명한 방법들에서 c_i와 d_i들은 이렇게 주어집니다.
We divide the operator by the assumptions and use the commutativity of the operator to expand it as a product of several exponentials. 

Here we Taylor-approximate each term to put it in a form that we can actually compute. Finding c_i and d_i in an appropriate way then completes the integration method. In popular methods, c_i and d_i are given like this.

따라서 최종 식은 이렇게 됩니다. 위치와 운동량을 서로 번갈아 가며 업데이트 합니다.
So the final expression looks like this We update the position and momentum alternately.

실제로 시뮬레이션 해보면 에너지가 잘 보존되며 진행되는 것을 볼 수 있습니다. 이렇듯 심플렉틱 적분기는 긴 시간 동안에도 안정적으로 해를 잘 근사하기 때문에 여러 비선형 동역학 문제와 분자역학, 가속기, 플라즈마 물리학, 그리고 우리가 관심이 있는 천체역학 문제까지 폭넓게 사용됩니다.
If you actually simulate it, you'll see that the energy is conserved well. Because symplectic integrators like this approximate the solution so well, even over long periods of time, they are widely used in many nonlinear dynamics problems and in molecular dynamics, accelerators, plasma physics, and even the celestial mechanics problems that we're interested in.


Optimization Methods

하지만, N-body problem은 입자 수 N이 늘어날 수록 계산 량은 O(n)으로 늘어납니다. 10000개의 입자를 시뮬레이션 한다면 고려해야하는 상호작용의 수는 1 + 2 + ... + 9999 = 49,995,000 입니다. 따라서 많은 수의 분자나 소행성 군집을 시뮬레이션 하기 위해서는 적절한 근사가 필요합니다.

- approximation for many bodies: Tree code method

Tree code method는 이러한 근사 방법중 하나 입니다. 입자간 거리가 멀다면 가까운 입자에 비해 역제곱에 비례해 더 낮은 힘을 가합니다. 따라서 가까운 입자들에 대해서는 해밀토니안을 직접 적분하고, 거리가 먼 입자에 대해서는 입자 군 자체를 multipole expansion하여 근사합니다. 하지만, 왜 "Tree" code method라고 불릴까요? 바로 근사를 위해 공간을 트리 형태로 쪼개기 때문입니다. 구체적인 계산은 가장 유명한 Barnes-Hut simulation을 예로 들겠습니다. 입자가 이와같이 분포되어있다고 가정합니다. 먼저 공간을 격자들로 쪼갭니다. 쪼갠 이후에 일정 수 이상의 입자가 몰려있는 곳을 다시 네 조각으로 쪼갭니다. 한 조각 안에 충분히 작은 수의 입자만 남을 때 까지 반복합니다. 

이렇게 전체 시스템을 여러개의 subsystem들로 쪼갤 수 있었습니다. 이제 포텐셜은 각 subsystem의 self potential과 서로 다른 두 system의 interaction potential으로 나눌 수 있습니다. 여기서 self potential과 서로 인접한 두 그룹의 interaction potential은 잘 아는 방법대로 n^2/2개의 interation을 모두 고려하여 구합니다. 서로 멀리떨어진 두 subsystem까리의 interaction potential은 각각의 subsystem을 multipole expasion하여 근사합니다. 조금 더 상황을 단순화 해서 하나의 입자가 가지는 퍼텐셜 에너지를 계산하면 해당 입자 주변의 subsystem들의 경우 interation을 전부 계산하고, 멀리 떨어진 subsystem들은 multipole expansion하여 계산량을 줄입니다.

그렇다면 입자 하나의 potential을 계산하기 위해 멀리 떨어진 입자들을 묶어서 생각하므로 계산량이 n에서 log_4 n으로 감소하며, 실질적인 계산량이 O(n log n)으로 감소합니다. 이런 방법들은 은하의 충돌 같이 엄청난 수의 입자를 고려해야하는 게산천체물리학과 같은 분야에서 중요하게 사용됩니다.



- particle mesh

Tree code 방법 이외에도 다른 근사방법들이 있습니다. 기본 아이디어는 potenatial 계산을 위해 입자 계를 질량 밀도 mesh로 변환하고, fast fourier transformation을 통해 frequency domain에서 poisson equation을 효율적으로 풀어 potential을 구하는 방법입니다. 하지만 위 방법과 다르게 가까운 입자를 따로 exact하게 처리해주지 않기 때문에 해당 부분에서 정확도 희생이 있습니다. 따라서 먼 입자에 대해서 mesh 근사를 적용하고, 가까운 입자에 대해서는 particle-particle interaction을 사용하는 하이브리드 방법이 있습니다. 이를 Particle-Particle-Particl-Mesh method, P³M method라 합니다.


- softening

이러한 interaction 근사 방법 이외에도 수치해석 근사의 안전성을 위해 채택되는 테크닉이 있습니다. 해밀토니안은 두 입자가 매우 가까울 때 발산하므로 해당 지점들에서 오차가 크게 발생합니다. 따라서 작은 상수 epsilon을 더해 해당 문제를 극복합니다. 이 행위는 potential을 부드럽게 만들기 때문에 softening이라 불립니다.


Summary

요약하자면 ----


